/*
 * Copyright 2010 Jesper Öqvist <jesper@llbit.se>
 *
 * This file is part of J99.
 *
 * J99 is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * J99 is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with J99.  If not, see <http://www.gnu.org/licenses/>.
 */

aspect DumpString {
	syn String ASTNode.dumpTree() {
		StringBuffer buff = new StringBuffer(4096);
		buff = dumpTree(buff, "");
		return buff.toString();
	}

	syn StringBuffer ASTNode.dumpTree(StringBuffer buff) {
		buff.append(getClass().getName() + extraInfo());
		buff.append('\n');
		return buff;
	}

	syn StringBuffer ASTNode.dumpTree(StringBuffer buff, String indent) {
		buff.append(indent);
		buff = dumpTree(buff);
		for (int i = 0; i < getNumChild(); ++i) {
			buff = getChild(i).dumpTree(buff, indent+"  ");
		}
		return buff;
	}

	syn String ASTNode.extraInfo() = "";
}
